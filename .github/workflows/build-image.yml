name: Reusable Docker Build and Push

on:
  workflow_call:
    inputs:
      image-name:
        required: true
        type: string
        description: "Name of the image (e.g. app or filter)"
      target:
        required: true
        type: string
        description: "Docker build target (e.g. go_deploy or filter_deploy)"
    outputs:
      image-digest:
        description: "The digest of the published container image"
        value: ${{ jobs.build.outputs.digest }}
    env:
      REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      actions: read
    outputs:
      digest: ${{ steps.build-image.outputs.digest }}

    steps:
      - name: Extract Metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: r38-${{ inputs.image-name }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up Docker Buildx
        id: setup-builder
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          version: latest

      - name: Build and push image
        id: build-image
        uses: docker/build-push-action@v6
        with:
          builder: ${{ steps.setup-builder.outputs.name }}
          push: ${{ github.event_name != 'pull_request' }}
          target: ${{ inputs.target }}
          tags: |
            ${{ steps.metadata.outputs.tags}}
          labels: |
            ${{ steps.metadata.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ github.repository }}-r38-${{ inputs.image-name }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ github.repository }}-r38-${{ inputs.image-name }}:buildcache,mode=max
          sbom: true
          provenance: true

      # - name: Sign the image with GitHub OIDC token
      #   if: github.event_name != 'pull_request'
      #   uses: actions/attest-build-provenance@v2
      #   with:
      #     subject-name: ${{ env.REGISTRY }}/r38-${{ inputs.image-name }}
      #     subject-digest: ${{ steps.build-image.outputs.digest }}
      #     push-to-registry: true
